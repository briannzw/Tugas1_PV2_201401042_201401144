<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>214, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DAsCAgKtAAAA/wAAAP8AAAD/AAAA+AQEBEkCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsL
        CwAPDw8IAwMDhAAAAPgAAAD/AAAA/wAAAP8AAAD/AgICfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACgoKAAsLCxADAwNzAQEBtwAAAOQAAAD8AAAA/wAAAP8CAgKwDg4OBwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHh4eAAAAAAAICAgIBAQEJgICAloBAQGaAQEB1QEBAdEHBwciAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAAsLCwIEBAQWBQUFPAoK
        ChUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP////8AAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAA+AAAAMAAAADAAAAAwAA
        AAOAABADwAAAA+AAAAPwIAAD+ACAA/wBwAP8A+AD/gfwB/8H+AP/j/wD///+Af///gH///8B///+Af//
        /gD///+A////8P////8=
</value>
  </data>
</root>